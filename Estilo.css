body {
    width: auto;
    height: auto;
    background-image: url(Fondo.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
    color: white;
}


/*1em=16px o dependiendo cuantos px le demos a la caja contenedora estas son medidas relativas

/*font-width para hacer maás gruesa o más fina las letras
line-height para que la letra ocupe más o menos altura el texto

vw=width  vh=height estas son medidas relativas

padding va arriba(bottom) derecha(right) abajo(top) izquierda(left)

box-shadow o text-shadow es primero para el costado, segundo para abajo, tercero para el tamaño de la sombra, cuarto el borde y despues el color

overflow hace que lo que sobra del texto u otra cosa se acomode al bloque, los tipos son auto, scroll, hidden(para que no se vea el scroll)*/

.Resto {
    position: absolute;
    float: left;
    bottom: 10px;
    border-radius: 300px;
    width: 150px;
    height: 150px;
    bottom: 520px;
}

h1 {
    position: absolute;
    font-size: xx-large;
    bottom: 490px;
    color: rgb(162, 0, 255);
    background-color: rgb(23, 20, 32);
    background: linear-gradient(130deg, #000000a8, #970097);
    width: 35.8em;
    height: 58px;
    padding: 50px 500px 110px 50px;
    left: 4.8em;
    font-weight: 400;
    text-shadow: 7px 7px 10px black, 7px 7px 10px black, 7px 7px 10px black;
    font-family: Texturina, Cambria, Cochin, Georgia, Times, 'Times New Roman', serif, cursive;
}

.Fila {
    position: absolute;
    font-size: x-large;
    color: rgb(187, 53, 116);
    bottom: 30px;
    background-color: rgb(33, 29, 46);
    background: linear-gradient(130deg, #0f0022a8, #2a002e);
    width: 54.1em;
    height: auto;
    padding: 15px;
    bottom: 450px;
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}

.Audios {
    position: absolute;
    width: 15em;
    height: 90em;
    top: 300px;
}


/*Los Pseudoelementos pueden tener más propiedades como agregarle ::first-letter(para modificar solo esa parte del texto, estos no funcionan en display inline)
::placeholder, ::selection(este se comporta en linea), ::after y ::before(se usan con content y son elementos inline)*/

.olores {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    margin-left: 5px;
    top: 60px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.panza {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    top: 230px;
    margin-left: 5px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.Auto {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    top: 400px;
    margin-left: 5px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.Saludos {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    top: 570px;
    margin-left: 5px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.Clases {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    top: 740px;
    margin-left: 5px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.BañosPublicos {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    top: 910px;
    margin-left: 5px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.Ascensor {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    top: 1080px;
    margin-left: 5px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}


/*outline es para enmarcar pero sin ocupar espacio*/


/*display puede ser en bloque(si se pueden cambiar las resoluciónes), en linea(no se pueden cambiar las resoluciónes) o en bloque en linea

z-index es un elemento para poner un objeto por encima del otro

position sticky funciona como fixed hasta el momento donde se lo pasa haciendo scroll*/

.Bondi {
    position: absolute;
    background-color: rgba(33, 29, 46, 0.815);
    width: 300px;
    font-size: x-large;
    border-radius: 15px;
    top: 1250px;
    margin-left: 5px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}


/*flexbox es una propiedad la cual mejora el posicionamiento de las cajas
flex-direction (sirve para cambiar a direccion de las cajas), estas son: raw(que es por defecto)
column(hace que las cajas se comporten como una columna)
raw-reverse(hace que los ejes no cambien sino que haga efecto inverso)
flex-wrap(sirve para que el ancho de una caja no se achique, entonces lo mueve hacia abajo),wrap reverse lo mismo pero para arriba.
flex-flow(sirve para poner flex-direccion y wrap a la vez)
justify-content(sirve para mover los contenedores)
center(hace que el contenedor se centre)
space-around(es lo mismo que el margin auto pero es mejor para los contenedores)
space-between(le da un margin auto a todas las cajas)
space-around(deja la mayor cantidad de espacio entre todas las cajas)
space-evenly(hace que todas las cajas tengan un margen exacto entre ellas)

aling-items(esta es una propiedad para modificar el cross axis)
stretch(es la propiedad por defecto)
flex-start(hace que la caja flexible se adapte solo al contenido que tiene)
center(se centra verticalmente)
flex-end(se centra al final)
baseline()
aling-content(se usa cuando hay más de una linea de cajas, tiene las mismas propiedades que aling-items)

Propiedades para los items
aling-self(para mover una sola caja con las propiedades de arriba)
flex-grow(agarra el espacio sobrante y lo reparte entre todas, esto se lo puede dar individualmente)
flex-basis(es como el width pero tiene mayor jerarquia)
flex-shrink(decide que espacio va a ocupar cada una)
Flex(agrupa las tres anteriores en una seria flex:grow shrink basis;)
Order(es como el z index pero en el main axis)
*/

.todos {
    position: absolute;
    top: 490px;
    width: 81.1em;
    float: left;
}

.renzo {
    position: relative;
    width: 100px;
    height: 100px;
    float: right;
    border-radius: 300px;
    bottom: 100px;
    left: 80px;
    padding: 3px 3px;
    background: linear-gradient(130deg, #1c39e0, #470147);
    transition: width 1s, height 1s;
}

.renzo:hover {
    width: 130px;
    height: 130px;
}

.tochi {
    position: relative;
    width: 100px;
    height: 100px;
    float: right;
    border-radius: 300px;
    bottom: 100px;
    left: 180px;
    padding: 3px 3px;
    background: linear-gradient(130deg, #1c39e0, #470147);
    transition: width 1s, height 1s;
}

.tochi:hover {
    width: 130px;
    height: 130px;
}

.nocita {
    position: relative;
    width: 100px;
    height: 100px;
    float: right;
    bottom: 70px;
    border-radius: 300px;
    left: 500px;
    padding: 3px 3px;
    background: linear-gradient(130deg, #1c39e0, #470147);
    transition: width 1s, height 1s;
}

.nocita:hover {
    width: 130px;
    height: 130px;
}

.pato {
    position: relative;
    width: 100px;
    height: 100px;
    float: right;
    border-radius: 300px;
    left: 460px;
    bottom: 70px;
    padding: 3px 3px;
    background: linear-gradient(130deg, #1c39e0, #470147);
    transition: width 1s, height 1s;
}

.pato:hover {
    width: 130px;
    height: 130px;
}


/*objet fit es para imagenes, contain(las resoluciónes de la imagen se acomodan)
cover(la imagen se ajusta al contenedor)
scale-down(elige la caracteristica que más convenga)

Objet position (hace que la imagen se adapte al lado que quieras)*/

.patob {
    position: absolute;
    left: 700px;
}

.patoig {
    position: absolute;
    width: 30px;
    height: 30px;
    border-radius: 100px;
    float: right;
    left: 450px;
    top: 58px;
}

.texto1 {
    position: absolute;
    width: 30px;
    height: 30px;
    float: right;
    left: 480px;
    top: 65px;
    text-decoration: none;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.renzob {
    position: absolute;
    left: 1080px;
    bottom: 10px;
}

.renzoig {
    position: absolute;
    width: 30px;
    height: 30px;
    border-radius: 100px;
    float: right;
    left: 50px;
    bottom: 78px;
}

.texto2 {
    position: absolute;
    float: right;
    bottom: 85px;
    left: 80px;
    text-decoration: none;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.tochib {
    position: absolute;
    left: 820px;
    bottom: 10px;
}

.tochiig {
    position: absolute;
    width: 30px;
    height: 30px;
    border-radius: 100px;
    float: right;
    bottom: 78px;
    left: 160px;
}

.texto3 {
    position: absolute;
    float: right;
    left: 190px;
    bottom: 85px;
    text-decoration: none;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

.nocitaig {
    position: absolute;
    width: 30px;
    height: 30px;
    border-radius: 100px;
    float: right;
    left: 485px;
    top: 58px;
}

.nocitab {
    position: absolute;
    left: 500px;
}

.texto4 {
    position: absolute;
    width: 30px;
    height: 30px;
    float: right;
    left: 515px;
    top: 65px;
    text-decoration: none;
    font-family: Georgia, 'Times New Roman', Times, serif;
}


/*Las Pseudoclases pueden ser: hover(cuando se pasa el mouse por encima pasa algo)
:link(cambiar un link que todavia no se visito)
:visited(para cambiar el color de los links ya visitados)
:active(al dejar apretado un boton cambia)
:focus(funciona para los input, y hace que cuando esta enfocado haga el cambio)
:lang(aca va un parametro como es, en, etc)[modifica el parametro que le hallamos dado antes]

Transition sirve para hacer que un cambio pase en un tiempo determinado*/

.spotify {
    position: relative;
    border-radius: 20px;
    width: 70px;
    height: 70px;
    top: 1600px;
    left: 1000px;
}

.spotifyl {
    position: absolute;
    font-size: 35px;
    left: 1070px;
    top: 1610px;
    color: rgb(194, 190, 212);
    background: rgba(225, 225, 225, 0.123);
    text-decoration: none;
    border-radius: 2px;
    transition: all .5s;
}

.spotifyl:hover {
    background-color: rgb(37, 39, 46);
    color: rgb(83, 188, 207);
    padding-top: 10px;
    padding-bottom: 10px;
    bottom: 30px;
    height: 55px;
}

@media only screen and (max-width: 700px) {
    body {
        width: auto;
        max-width: 800px;
        height: auto;
        background-image: url(Fondo.jpg);
        background-repeat: no-repeat;
        background-size: cover;
        background-attachment: fixed;
    }
    .Resto {
        position: absolute;
        width: 135px;
        height: 135px;
        top: 70px;
    }
    h1 {
        position: absolute;
        width: 220px;
        top: 45px;
        left: 140px;
        max-width: 650px;
        padding: 30px 100px 110px 0px;
    }
    .Fila {
        position: absolute;
        width: 360px;
        top: 210px;
        padding: 15px 10px 50px 10px;
    }
    .Audios {
        position: absolute;
        width: 200px;
    }
    .todos {
        position: absolute;
        width: 1200px;
        right: 120px;
        top: 1930px;
    }
    .spotify {
        position: absolute;
        top: 2100px;
        left: 0px;
    }
    .spotifyl {
        position: absolute;
        left: 80px;
        top: 2110px;
        width: 205px;
    }
}


/*cursor(para cambiar el cursor cuando pase por un elemento)*/
